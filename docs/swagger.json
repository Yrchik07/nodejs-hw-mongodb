{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is documentation of contacts app\n"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://example.com/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "API for contacts"
    },
    {
      "name": "Auth",
      "description": "API for auth"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "register"
        ],
        "summary": "Create a user",
        "operationId": "createUser",
        "description": "Create a new user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "Vasya"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "test@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "register new user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Login user to get token",
        "operationId": "loginUser",
        "description": "Login user to get token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "test@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJSUzI1NiIsImtpZCI6Ijg3YmJlMDgxNWIwNjRlNmQ0NDljYWM5OTlmMGU1MGU3MmEzZTQzNzQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiIzNjU5OTk5MzU1ODEtcWo0bm5kcG4ycDBjbTc2MGZmaTg0YnVpdnBtcWtmaWkuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiIzNjU5OTk5MzU1ODEtcWo0bm5kcG4ycDBjbTc2MGZmaTg0YnVpdnBtcWtmaWkuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMDA5MDMwNzkwNjY0NTEzODk1MDIiLCJlbWFpbCI6InVyY2hpazg5QGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJhdF9oYXNoIjoiVWhUakdTâ€¦HdFg5cVZYbXN5VFZ5VUlUaU1jPXM5Ni1jIiwiZ2l2ZW5fbmFtZSI6ItCu0YDQsCIsImZhbWlseV9uYW1lIjoi0JrQvtC60YjQsNGA0L7QsiIsImlhdCI6MTcyMDQ0MjMwNiwiZXhwIjoxNzIwNDQ1OTA2fQ.FQhYXFXAluLLTDYIvGqPBGD6hq2GBd-thwsqHk6EgcremhPrIFR0r4A91omyVY5DZCecqdRaT7XJM2uyKd4KCLkrvbZ85avTeBGlhIBMonc1amPebHQvjckG0IZn4pQshhwfPkbfgDalWC1Zv9lXLvV_9BwT9-rQINl8RI588wkkUU-Ul_IqAIzJxj34QBrLFBhIDsoalFCVM6uhrmB8dcB9iebtVc1MnA8LLimpElnRg4vBo9r_mKGdN-uaB1XHSMnHg-CIqOxiUSDGylrVkATW00wZxrQZvDZ8w4rZ1dgag263LXCQPcUPbHoZFs8TzQ4n4KeTc-DbETaaCJi_Ag"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get list of contacts",
        "operationId": "getContacts",
        "description": "Get list of users with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "current page number",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "limit contacts per page",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "_id",
                "name",
                "phoneNumber",
                "email"
              ],
              "example": "name"
            },
            "description": "All contact's fields can be mentioned. Default value - _id"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "description": "Default value - asc",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "isFavourite",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "description": "Show only favourite contacts"
          },
          {
            "in": "query",
            "name": "contactType",
            "schema": {
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "example": "work"
            },
            "description": "Show only contacts of this type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contacts!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contacs"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "email"
                ],
                "properties": {
                  "name": {
                    "description": "Contact's name",
                    "type": "string",
                    "example": "Vasya"
                  },
                  "phoneNumber": {
                    "description": "Contact's phone number",
                    "type": "string",
                    "example": "+380123456789"
                  },
                  "email": {
                    "description": "Contact's email",
                    "type": "string",
                    "example": "test@example.com"
                  },
                  "isFavourite": {
                    "description": "Contact's favourite",
                    "type": "boolean",
                    "default": false,
                    "example": true
                  },
                  "contactType": {
                    "description": "Contact's type",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "default": "personal",
                    "example": "personal"
                  },
                  "photo": {
                    "description": "Contact's photo",
                    "type": "string",
                    "format": "binary"
                  },
                  "userId": {
                    "description": "Owner id of the contact",
                    "type": "string",
                    "example": "66800e1312f5e46cf145fd00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contacs"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacs"
        ],
        "summary": "Get contacs by id",
        "operationId": "getContacs",
        "description": "You can get access only to children added by you",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66800e1312f5e46cf145fd00"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully contacts retrieval",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts with id 66800e1312f5e46cf145fd00!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contacs"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Patch contact by id",
        "operationId": "patchContact",
        "description": "Patch contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "65ca67e7ae7f10c88b598384"
                        },
                        "name": {
                          "type": "string",
                          "example": "Vasya"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": "+123456789"
                        },
                        "photo": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dfdinboww/image/upload/v1720113389/sopoome4b0feh6v3gedu.jpg"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched contact!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact by id",
        "operationId": "deleteContact",
        "description": "Delete contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66800e1312f5e46cf145fd00"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Contact successfully deleted"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "6682ddbc30a704c3d22edd43"
          },
          "name": {
            "type": "string",
            "example": "Vasya"
          },
          "email": {
            "type": "string",
            "example": "test@example.com"
          },
          "password": {
            "type": "string",
            "example": "123456"
          },
          "createdAt": {
            "type": "string",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2021-01-01T00:00:00.000Z"
          }
        }
      },
      "contacs": {
        "type": "object",
        "required": [
          "name",
          "phoneNumber",
          "email",
          "isFavourite",
          "contactType",
          "userId",
          "photo"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Vasya"
          },
          "phoneNumber": {
            "type": "string",
            "example": 380123456789
          },
          "email": {
            "type": "string",
            "example": "test@gmail.com"
          },
          "isFavourite": {
            "type": "boolean",
            "example": true
          },
          "contactType": {
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "work"
          },
          "userId": {
            "type": "string",
            "example": "66800e1312f5e46cf145fd00"
          },
          "photo": {
            "type": "string",
            "example": "<https://res.cloudinary.com/dfdinboww/image/upload/v1720113389/sopoome4b0feh6v3gedu.jpg>"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized!"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Contact not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Contact not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}